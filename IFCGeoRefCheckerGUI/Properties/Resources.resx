<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CHECK_SELECTED_FILE" xml:space="preserve">
    <value>Check selected file</value>
  </data>
  <data name="INPUT_IFC_FILES" xml:space="preserve">
    <value>Input IFC-Files</value>
  </data>
  <data name="LOADED_IFC_FILES" xml:space="preserve">
    <value>Loaded IFC-Files</value>
  </data>
  <data name="LOAD_IFC_FILES" xml:space="preserve">
    <value>Load IFC-Files</value>
  </data>
  <data name="LOG_OUTPUT" xml:space="preserve">
    <value>Log output</value>
  </data>
  <data name="SET_WORKING_DIRECTORY" xml:space="preserve">
    <value>Set working directory</value>
  </data>
  <data name="SHOW_PROTOCOL" xml:space="preserve">
    <value>Show protocol</value>
  </data>
  <data name="STATUS_LABEL" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="STATUS_REPORT" xml:space="preserve">
    <value>Status report</value>
  </data>
  <data name="WORKING_DIRECTORY_LABEL" xml:space="preserve">
    <value>Working directory</value>
  </data>
  <data name="PLEASE_CHOOSE_PATH" xml:space="preserve">
    <value>Please choose path!</value>
  </data>
  <data name="LANGUAGE_LABEL" xml:space="preserve">
    <value>Select language :</value>
  </data>
  <data name="FILES_LOADED_FORMAT" xml:space="preserve">
    <value>file(s) loaded</value>
  </data>
  <data name="FILES_CHECKED_FORMAT" xml:space="preserve">
    <value>file(s) checked</value>
  </data>
  <data name="ProtocolHeader" xml:space="preserve">
    <value>IFCGeoRefChecker protocoll for file {0}</value>
  </data>
  <data name="IfcVersion" xml:space="preserve">
    <value>IfcVersion</value>
  </data>
  <data name="CheckedOn" xml:space="preserve">
    <value>Checked on</value>
  </data>
  <data name="MaxCoordinates" xml:space="preserve">
    <value>Maximum coordinates are</value>
  </data>
  <data name="RefElevationAndZ" xml:space="preserve">
    <value>Ref elevation and Placement Z-Values of site are</value>
  </data>
  <data name="NotSpecified" xml:space="preserve">
    <value>not specified!</value>
  </data>
  <data name="MapConversion" xml:space="preserve">
    <value>Map Conversion orthoghonal height is</value>
  </data>
  <data name="Fulfilled" xml:space="preserve">
    <value>is fullfilled ✓</value>
  </data>
  <data name="NotFulfilled" xml:space="preserve">
    <value>is not fulfilled</value>
  </data>
  <data name="With" xml:space="preserve">
    <value>with</value>
  </data>
  <data name="PostalAddress" xml:space="preserve">
    <value>Postal address referenced by Entity #</value>
  </data>
  <data name="NoPostalAddress" xml:space="preserve">
    <value>No postal address found for Entity #</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Region" xml:space="preserve">
    <value>Region</value>
  </data>
  <data name="Town" xml:space="preserve">
    <value>Town</value>
  </data>
  <data name="PostalCode" xml:space="preserve">
    <value>Postal code</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="GeographicLocation" xml:space="preserve">
    <value>Geographic location specified by Entity #</value>
  </data>
  <data name="AccordingCoordinates" xml:space="preserve">
    <value>According to these coordinates this</value>
  </data>
  <data name="NoGeographicLocation" xml:space="preserve">
    <value>No (valid) geographic location found for Entity #</value>
  </data>
  <data name="NoSite" xml:space="preserve">
    <value>Checked file does not contain any site!</value>
  </data>
  <data name="PlacementZCoordinates" xml:space="preserve">
    <value>Placement Z-coordinates are</value>
  </data>
  <data name="SiteLocated" xml:space="preserve">
    <value>Site is located in</value>
  </data>
  <data name="UpperEntity" xml:space="preserve">
    <value>Upper most entity of spatial structures is</value>
  </data>
  <data name="GeographicContext" xml:space="preserve">
    <value>Local placement of this entity has geographic context.</value>
  </data>
  <data name="NoGeographicContext" xml:space="preserve">
    <value>Local placement of this entity has no geographic context</value>
  </data>
  <data name="LocationCoordinates" xml:space="preserve">
    <value>Coordinates of the location are</value>
  </data>
  <data name="DirectionX" xml:space="preserve">
    <value>Direction of X-axis is</value>
  </data>
  <data name="DirectionZ" xml:space="preserve">
    <value>Direction of Z-axis is</value>
  </data>
  <data name="TrueNorth" xml:space="preserve">
    <value>True North is</value>
  </data>
  <data name="NoTrueNorth" xml:space="preserve">
    <value>True North is not specified. This defaults to</value>
  </data>
  <data name="ParametersWCS" xml:space="preserve">
    <value>Parameters of the World Coordinate System</value>
  </data>
  <data name="NoWCSGeoref" xml:space="preserve">
    <value>Attribute World Coordinate System of IfcGeometricRepresentationContext is not used for georeferencing</value>
  </data>
  <data name="Reference" xml:space="preserve">
    <value>references</value>
  </data>
  <data name="OfType" xml:space="preserve">
    <value>of type</value>
  </data>
  <data name="MapConversionDefined" xml:space="preserve">
    <value>IfcMapConversion defined in</value>
  </data>
  <data name="TransEast" xml:space="preserve">
    <value>Translation Eastings:</value>
  </data>
  <data name="TransNorth" xml:space="preserve">
    <value>Translation Northings:</value>
  </data>
  <data name="TransHeight" xml:space="preserve">
    <value>Translation Height:</value>
  </data>
  <data name="Scale" xml:space="preserve">
    <value>Scale:</value>
  </data>
  <data name="ScaleMapConversion" xml:space="preserve">
    <value>Scale of map conversion is between 0.9 and 1.1. This might not be used for conversion of units.</value>
  </data>
  <data name="TargetCRS" xml:space="preserve">
    <value>Target CRS is:</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="GeoDatum" xml:space="preserve">
    <value>Geodetic Datum:</value>
  </data>
  <data name="VertDatum" xml:space="preserve">
    <value>Vertical Datum:</value>
  </data>
  <data name="NoMapConvBy" xml:space="preserve">
    <value>No IfcMapConverison specified by #</value>
  </data>
  <data name="ContextType" xml:space="preserve">
    <value>for ContextType</value>
  </data>
  <data name="FoundNo" xml:space="preserve">
    <value>Found no IfcGeometricRepresentationContext</value>
  </data>
  <data name="NoMapConvIn" xml:space="preserve">
    <value>No IfcMapConversion specified in file</value>
  </data>
  <data name="RotXAbs" xml:space="preserve">
    <value>Rotation X-Axis Abscissa:</value>
  </data>
  <data name="RotXOrd" xml:space="preserve">
    <value>Rotation X-Axis Ordinate:</value>
  </data>
</root>