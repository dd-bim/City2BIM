//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IFCGeoRefCheckerGUI.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IFCGeoRefCheckerGUI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die According to these coordinates this ähnelt.
        /// </summary>
        internal static string AccordingCoordinates {
            get {
                return ResourceManager.GetString("AccordingCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Address ähnelt.
        /// </summary>
        internal static string Address {
            get {
                return ResourceManager.GetString("Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check selected file ähnelt.
        /// </summary>
        internal static string CHECK_SELECTED_FILE {
            get {
                return ResourceManager.GetString("CHECK_SELECTED_FILE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checked on ähnelt.
        /// </summary>
        internal static string CheckedOn {
            get {
                return ResourceManager.GetString("CheckedOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die for ContextType ähnelt.
        /// </summary>
        internal static string ContextType {
            get {
                return ResourceManager.GetString("ContextType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Country ähnelt.
        /// </summary>
        internal static string Country {
            get {
                return ResourceManager.GetString("Country", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description: ähnelt.
        /// </summary>
        internal static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Direction of X-axis is ähnelt.
        /// </summary>
        internal static string DirectionX {
            get {
                return ResourceManager.GetString("DirectionX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Direction of Z-axis is ähnelt.
        /// </summary>
        internal static string DirectionZ {
            get {
                return ResourceManager.GetString("DirectionZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die file(s) checked ähnelt.
        /// </summary>
        internal static string FILES_CHECKED_FORMAT {
            get {
                return ResourceManager.GetString("FILES_CHECKED_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die file(s) loaded ähnelt.
        /// </summary>
        internal static string FILES_LOADED_FORMAT {
            get {
                return ResourceManager.GetString("FILES_LOADED_FORMAT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Found no IfcGeometricRepresentationContext ähnelt.
        /// </summary>
        internal static string FoundNo {
            get {
                return ResourceManager.GetString("FoundNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die is fullfilled ✓ ähnelt.
        /// </summary>
        internal static string Fulfilled {
            get {
                return ResourceManager.GetString("Fulfilled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Geodetic Datum: ähnelt.
        /// </summary>
        internal static string GeoDatum {
            get {
                return ResourceManager.GetString("GeoDatum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local placement of this entity has geographic context. ähnelt.
        /// </summary>
        internal static string GeographicContext {
            get {
                return ResourceManager.GetString("GeographicContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Geographic location specified by Entity # ähnelt.
        /// </summary>
        internal static string GeographicLocation {
            get {
                return ResourceManager.GetString("GeographicLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IfcVersion ähnelt.
        /// </summary>
        internal static string IfcVersion {
            get {
                return ResourceManager.GetString("IfcVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Input IFC-Files ähnelt.
        /// </summary>
        internal static string INPUT_IFC_FILES {
            get {
                return ResourceManager.GetString("INPUT_IFC_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select language : ähnelt.
        /// </summary>
        internal static string LANGUAGE_LABEL {
            get {
                return ResourceManager.GetString("LANGUAGE_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load IFC-Files ähnelt.
        /// </summary>
        internal static string LOAD_IFC_FILES {
            get {
                return ResourceManager.GetString("LOAD_IFC_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loaded IFC-Files ähnelt.
        /// </summary>
        internal static string LOADED_IFC_FILES {
            get {
                return ResourceManager.GetString("LOADED_IFC_FILES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Coordinates of the location are ähnelt.
        /// </summary>
        internal static string LocationCoordinates {
            get {
                return ResourceManager.GetString("LocationCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Log output ähnelt.
        /// </summary>
        internal static string LOG_OUTPUT {
            get {
                return ResourceManager.GetString("LOG_OUTPUT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Map Conversion orthoghonal height is ähnelt.
        /// </summary>
        internal static string MapConversion {
            get {
                return ResourceManager.GetString("MapConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IfcMapConversion defined in ähnelt.
        /// </summary>
        internal static string MapConversionDefined {
            get {
                return ResourceManager.GetString("MapConversionDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maximum coordinates are ähnelt.
        /// </summary>
        internal static string MaxCoordinates {
            get {
                return ResourceManager.GetString("MaxCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local placement of this entity has no geographic context ähnelt.
        /// </summary>
        internal static string NoGeographicContext {
            get {
                return ResourceManager.GetString("NoGeographicContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No (valid) geographic location found for Entity # ähnelt.
        /// </summary>
        internal static string NoGeographicLocation {
            get {
                return ResourceManager.GetString("NoGeographicLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No IfcMapConverison specified by # ähnelt.
        /// </summary>
        internal static string NoMapConvBy {
            get {
                return ResourceManager.GetString("NoMapConvBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No IfcMapConversion specified in file ähnelt.
        /// </summary>
        internal static string NoMapConvIn {
            get {
                return ResourceManager.GetString("NoMapConvIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No postal address found for Entity # ähnelt.
        /// </summary>
        internal static string NoPostalAddress {
            get {
                return ResourceManager.GetString("NoPostalAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checked file does not contain any site! ähnelt.
        /// </summary>
        internal static string NoSite {
            get {
                return ResourceManager.GetString("NoSite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die is not fulfilled ähnelt.
        /// </summary>
        internal static string NotFulfilled {
            get {
                return ResourceManager.GetString("NotFulfilled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die True North is not specified. This defaults to ähnelt.
        /// </summary>
        internal static string NoTrueNorth {
            get {
                return ResourceManager.GetString("NoTrueNorth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die not specified! ähnelt.
        /// </summary>
        internal static string NotSpecified {
            get {
                return ResourceManager.GetString("NotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attribute World Coordinate System of IfcGeometricRepresentationContext is not used for georeferencing ähnelt.
        /// </summary>
        internal static string NoWCSGeoref {
            get {
                return ResourceManager.GetString("NoWCSGeoref", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die of type ähnelt.
        /// </summary>
        internal static string OfType {
            get {
                return ResourceManager.GetString("OfType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameters of the World Coordinate System ähnelt.
        /// </summary>
        internal static string ParametersWCS {
            get {
                return ResourceManager.GetString("ParametersWCS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Placement Z-coordinates are ähnelt.
        /// </summary>
        internal static string PlacementZCoordinates {
            get {
                return ResourceManager.GetString("PlacementZCoordinates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please choose path! ähnelt.
        /// </summary>
        internal static string PLEASE_CHOOSE_PATH {
            get {
                return ResourceManager.GetString("PLEASE_CHOOSE_PATH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Postal address referenced by Entity # ähnelt.
        /// </summary>
        internal static string PostalAddress {
            get {
                return ResourceManager.GetString("PostalAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Postal code ähnelt.
        /// </summary>
        internal static string PostalCode {
            get {
                return ResourceManager.GetString("PostalCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IFCGeoRefChecker protocoll for file {0} ähnelt.
        /// </summary>
        internal static string ProtocolHeader {
            get {
                return ResourceManager.GetString("ProtocolHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ref elevation and Placement Z-Values of site are ähnelt.
        /// </summary>
        internal static string RefElevationAndZ {
            get {
                return ResourceManager.GetString("RefElevationAndZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die references ähnelt.
        /// </summary>
        internal static string Reference {
            get {
                return ResourceManager.GetString("Reference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Region ähnelt.
        /// </summary>
        internal static string Region {
            get {
                return ResourceManager.GetString("Region", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotation X-Axis Abscissa: ähnelt.
        /// </summary>
        internal static string RotXAbs {
            get {
                return ResourceManager.GetString("RotXAbs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotation X-Axis Ordinate: ähnelt.
        /// </summary>
        internal static string RotXOrd {
            get {
                return ResourceManager.GetString("RotXOrd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scale: ähnelt.
        /// </summary>
        internal static string Scale {
            get {
                return ResourceManager.GetString("Scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scale of map conversion is between 0.9 and 1.1. This might not be used for conversion of units. ähnelt.
        /// </summary>
        internal static string ScaleMapConversion {
            get {
                return ResourceManager.GetString("ScaleMapConversion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set working directory ähnelt.
        /// </summary>
        internal static string SET_WORKING_DIRECTORY {
            get {
                return ResourceManager.GetString("SET_WORKING_DIRECTORY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show protocol ähnelt.
        /// </summary>
        internal static string SHOW_PROTOCOL {
            get {
                return ResourceManager.GetString("SHOW_PROTOCOL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Site is located in ähnelt.
        /// </summary>
        internal static string SiteLocated {
            get {
                return ResourceManager.GetString("SiteLocated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status: ähnelt.
        /// </summary>
        internal static string STATUS_LABEL {
            get {
                return ResourceManager.GetString("STATUS_LABEL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status report ähnelt.
        /// </summary>
        internal static string STATUS_REPORT {
            get {
                return ResourceManager.GetString("STATUS_REPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Target CRS is: ähnelt.
        /// </summary>
        internal static string TargetCRS {
            get {
                return ResourceManager.GetString("TargetCRS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Town ähnelt.
        /// </summary>
        internal static string Town {
            get {
                return ResourceManager.GetString("Town", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Translation Eastings: ähnelt.
        /// </summary>
        internal static string TransEast {
            get {
                return ResourceManager.GetString("TransEast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Translation Height: ähnelt.
        /// </summary>
        internal static string TransHeight {
            get {
                return ResourceManager.GetString("TransHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Translation Northings: ähnelt.
        /// </summary>
        internal static string TransNorth {
            get {
                return ResourceManager.GetString("TransNorth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die True North is ähnelt.
        /// </summary>
        internal static string TrueNorth {
            get {
                return ResourceManager.GetString("TrueNorth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Upper most entity of spatial structures is ähnelt.
        /// </summary>
        internal static string UpperEntity {
            get {
                return ResourceManager.GetString("UpperEntity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Vertical Datum: ähnelt.
        /// </summary>
        internal static string VertDatum {
            get {
                return ResourceManager.GetString("VertDatum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die with ähnelt.
        /// </summary>
        internal static string With {
            get {
                return ResourceManager.GetString("With", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Working directory ähnelt.
        /// </summary>
        internal static string WORKING_DIRECTORY_LABEL {
            get {
                return ResourceManager.GetString("WORKING_DIRECTORY_LABEL", resourceCulture);
            }
        }
    }
}
